name: Upgrade dependencies for Deno

on:
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * 3"

permissions:
  pull-requests: write
  contents: write

env:
  PR_BRANCH: deno-dependency-updates

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      pull-request-url: ${{ steps.cpr.outputs.pull-request-url }}
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Update dependencies with udd
        id: run-deno-udd
        env:
          NO_COLOR: true
        run: |
          {
            echo 'UDD_RESULT<<EOF'
            deno run --allow-all https://deno.land/x/udd/main.ts deno.json $(find . -type f | grep -E ".*\.([mc]?(ts|js)|(ts|js)x?)$" -) || true
            echo EOF
          } >> $GITHUB_OUTPUT
      - uses: peter-evans/create-pull-request@v6
        id: cpr
        with:
          commit-message: ":arrow_up: Update deno dependencies"
          title: Update Deno dependencies
          body: |-
            Some external modules are stale.
            <details><summary>Details</summary><div>

            ```
            ${{ steps.run-deno-udd.outputs.UDD_RESULT }}
            ```

            </div></details>
          branch: ${{ env.PR_BRANCH }}
          author: github-actions[bot] <noreply@github.com>
          delete-branch: true
      - name: Set Pull Request URL
        run: echo "pull-request-url=${{ steps.cpr.outputs.pull-request-url }}" >> $GITHUB_ENV
  test-medium:
    needs:
      - update
    uses: ./.github/workflows/test-medium.yml
    with:
      ref: ${{ github.env.PR_BRANCH }}
    secrets:
      CONFIG_ID: ${{ secrets.CONFIG_ID }}
      PAT: ${{ secrets.PAT }}
  auto-merge:
    runs-on: ubuntu-latest
    needs:
      - test-medium
    steps:
      - uses: actions/checkout@v4
    
      - name: Check if PR exists
        id: check
        run: |
          prs=$(gh pr list \
              --head ${{ env.PR_BRANCH }} \
              --base 'master' \
              --json title \
              --jq 'length')
          if ((prs > 0)); then
              echo "pr_exists=true" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable auto-merge
        if: steps.check.outputs.pr_exists
        run: gh pr merge --auto --merge needs.update.outputs.pull-request-url
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Delete branch
        if: steps.check.outputs.pr_exists
        run: git push origin ${{ env.PR_BRANCH }} -d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}